---
# Source: demo-pipeline/templates/java-app-build.yaml
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: java-app-build
  namespace: demo-pipeline
spec:
  params:
  - default: image-registry.openshift-image-registry.svc:5000/demo-pipeline/undertow-servlet
    name: IMAGE_NAME
    type: string
  - default: https://github.com/nstrug/openshift-quickstarts.git
    name: GIT_REPO
    type: string
  - default: good
    name: GIT_REVISION
    type: string
  - default: undertow-servlet
    name: SUBDIRECTORY
    type: string
  tasks:
  - name: fetch-repository
    retries: 5
    params:
    - name: URL
      value: $(params.GIT_REPO)
    - name: REVISION
      value: $(params.GIT_REVISION)
    - name: SUBDIRECTORY
      value: ""
    - name: DELETE_EXISTING
      value: "true"
    taskRef:
      params:
      - name: kind
        value: task
      - name: name
        value: git-clone
      - name: namespace
        value: openshift-pipelines
      resolver: cluster
    workspaces:
    - name: output
      workspace: shared-workspace
  - name: build
    retries: 5
    params:
    - name: IMAGE
      value: $(params.IMAGE_NAME)
    - name: TLS_VERIFY
      value: "false"
    - name: CONTEXT
      value: $(params.SUBDIRECTORY)
    runAfter:
    - fetch-repository
    taskRef:
      params:
      - name: kind
        value: task
      - name: name
        value: s2i-java
      - name: namespace
        value: demo-pipeline
      resolver: cluster
    workspaces:
    - name: source
      workspace: shared-workspace
  finally:
  - name: trigger-agent
    params:
    - name: aggregateTaskStatus
      value: "$(tasks.status)"
    taskSpec:
      params:
      - name: aggregateTaskStatus
      steps:
      - name: check-task-status
        image: registry.redhat.io/openshift4/ose-cli:latest
        script: |
          if [ "$(params.aggregateTaskStatus)" == "Failed" ]
          then
            set -Bx
            echo "Looks like your pipeline failed dumbass, let's find where you messed up"
            failed_pod=$(oc get pods --field-selector="status.phase=Failed" --sort-by="status.startTime" | grep -v "trigger-agent" | grep "java-app-build" | tail -n 1 | awk '{print $1}')
            curl -i -H "Content-Type: application/json" -X POST -d "{\"namespace\":\"demo-pipeline\",\"pod_name\":\"${failed_pod}\",\"container_name\":\"step-s2i-build\"}" http://ai-agent.ai-agent.svc.cluster.local:8000/report-failure
          fi
  workspaces:
  - name: shared-workspace
